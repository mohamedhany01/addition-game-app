{"version":3,"sources":["AdditionGame.js","index.js"],"names":["AdditionGame","N","useState","num1","Math","ceil","random","num2","input","score","tries","palyAgain","state","setState","handleInpute","e","trim","target","textContent","key","parseInt","oldState","console","log","className","type","placeholder","autoFocus","value","onKeyPress","onChange","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0dec360e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"./AdditionGame.css\";\n\nconst AdditionGame = () => {\n\n    const TOTAL_SCORES = 10,\n        BTN_NAME = \"Submit\",\n        KEY_NAME = \"Enter\",\n        N = 100;\n\n    const [state, setState] = useState({\n        num1: Math.ceil(Math.random() * N),\n        num2: Math.ceil(Math.random() * N),\n        input: \"\",\n        score: 0,\n        tries: 3,\n        palyAgain: false,\n    });\n\n    const handleInpute = (e) => {\n\n        if (state.input.trim() === \"\") return;\n\n        if (e.target.textContent !== BTN_NAME && e.key !== KEY_NAME) return;\n\n        // On success\n        if (parseInt(state.input) === (state.num1 + state.num2)) {\n            setState(oldState => ({\n                ...oldState,\n                num1: Math.ceil(Math.random() * N),\n                num2: Math.ceil(Math.random() * N),\n                score: oldState.score + 1,\n                input: \"\",\n                palyAgain: false,\n            }))\n        }\n        else { // On failure\n            setState((oldState) => ({\n                ...oldState,\n                score: state.score > 0 ? oldState.score - 1 : state.score,\n                tries: oldState.tries - 1,\n                input: \"\",\n                palyAgain: false,\n            }))\n\n        }\n    }\n\n    const palyAgain = () => (setState({\n        num1: Math.ceil(Math.random() * N),\n        num2: Math.ceil(Math.random() * N),\n        input: \"\",\n        score: 0,\n        tries: 3,\n        palyAgain: true,\n    }))\n\n    const renderProblem = () => {\n        return (\n            <div className=\"container-fluid h-100 align-items-center justify-content-center d-flex\">\n                <div className=\"row w-100 h-100\">\n                    <div className=\"col-6 flex-column align-items-center justify-content-center d-flex\">\n                        <div className=\"row w-100\">\n                            <div className=\"col-6\">\n                                <h1 className=\"text-light\">Addtion Game</h1>\n                            </div>\n                            <div className=\"col-6\">\n                                <div className=\"row w-100\">\n                                    <div className=\"score col-12 text-light h5 d-inline-block\"><span>{`Your score: ${state.score} of ${TOTAL_SCORES}`}</span></div>\n                                    <div className=\"tries col-12 text-light h5 d-inline-block\"><span>{`Number of tries: ${state.tries}`}</span></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"row w-100\">\n                            <div className=\"col-12\">\n                                <div className=\"problem text-primary lead display-5 bg-light p-2 my-2 border border-2 border-warning rounded-2\">{`${state.num1} + ${state.num2}`}</div>\n                            </div>\n                            {/* <div className=\"offset-6\"></div> */}\n                        </div>\n                        <div className=\"row w-100\">\n                            <div className=\"col-12\">\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Answer\" autoFocus={true} value={state.input} onKeyPress={handleInpute} onChange={(e) => (setState({ ...state, input: e.target.value }))} />\n                            </div>\n                            {/* <div className=\"offset-6\"></div> */}\n                        </div>\n                        <div className=\"row w-100\">\n                            <div className=\"col-12\">\n                                <button className=\"btn btn-warning btn-lg my-2 text-primary display-6 w-100 border border-1 border-light\" onClick={handleInpute}>Submit</button>\n                            </div>\n                            {/* <div className=\"offset-6\"></div> */}\n                        </div>\n                    </div>\n                    <div className=\"right-side col-6\"></div>\n                </div>\n            </div>\n        );\n    }\n\n    if ((state.score < TOTAL_SCORES && state.tries > 0) || state.palyAgain) {\n        console.log(\"Cont\");\n        console.log(state);\n        return (\n            renderProblem()\n        );\n    }\n    else if (state.tries <= 0) {\n        console.log(\"Lost\");\n        console.log(state);\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h1 className=\"text-danger text-center\">You Lost</h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <button onClick={palyAgain} className=\"btn btn-warning btn-lg my-2 text-primary display-6 border border-1 border-light\">Re-play</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else if (state.score === TOTAL_SCORES) {\n        console.log(\"Won\");\n        console.log(state);\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h1 className=\"text-warning text-center\">You Won</h1>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 text-center\">\n                        <button onClick={palyAgain} className=\"btn btn-warning btn-lg my-2 text-primary display-6 border border-1 border-light\">Re-play</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n};\n\nexport default AdditionGame;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AdditionGame from \"./AdditionGame\";\n\n\nReactDOM.render(<AdditionGame/>\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}